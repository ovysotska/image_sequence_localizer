syntax = "proto2";

package image_sequence_localizer;

// Assumes that all values of the matrix is known.
// values.size() == rows*cols. No checks for this though.
message CostMatrix {
  optional int32 rows = 20;
  optional int32 cols = 21;
  repeated double values = 1;
}

// Is used to store matching costs with associated query and reference id.
// Does not require all elements of the cost matrix to be present.
message MatchingCosts{
  message Element {
    optional int32 query_id = 1;
    optional int32 ref_id = 2;
    optional double value = 3;
  }
  repeated Element elements = 1;
}

message MatchingResult {
  message Match {
    optional int32 query_id = 1;
    optional int32 ref_id = 2;
    // The status of the match: real or hidden.
    optional bool real = 3;
  }
  repeated Match matches = 1;
}

// Assumes that the feature is represented as a 1D vector.
// The values are stored in the `values` field.
message Feature {
  repeated double values = 1;
  optional int32 size = 2;
  optional string type = 3;
}


